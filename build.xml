<?xml version="1.0"?>
<project name="jsnobol3" default="all" basedir="."
         xmlns:if="ant:if"
         xmlns:unless="ant:unless">

<property name="RELEASE" value="1.0"/>
<property name="RELEASEDATE" value="2005-10-01"/>

<property name="VMSRC" value="
jsnobol3/Argtype.java
jsnobol3/AST.java
jsnobol3/AstType.java
jsnobol3/Call.java
jsnobol3/S3Compiler.java
jsnobol3/Constants.java
jsnobol3/Debug.java
jsnobol3/Define.java
jsnobol3/Error.java
jsnobol3/EvalStack.java
jsnobol3/Frame.java
jsnobol3/Function.java
jsnobol3/FunctionCompiler.java
jsnobol3/Label.java
jsnobol3/Lexer.java
jsnobol3/Modes.java
jsnobol3/Operator.java
jsnobol3/Parser.java
jsnobol3/Pass1.java
jsnobol3/Pass2.java
jsnobol3/Pass3.java
jsnobol3/PatternOp.java
jsnobol3/Primitive.java
jsnobol3/Program.java
jsnobol3/S3Reader.java
jsnobol3/Scope.java
jsnobol3/Token.java
jsnobol3/TokenType.java
jsnobol3/Var.java
jsnobol3/VM.java
"/>

<property name="INTERPSRC" value="
jsnobol3/AbstractDebug.java
jsnobol3/AbstractDebugPoint.java
jsnobol3/CharStream.java
jsnobol3/CharStreamSequence.java
jsnobol3/Factory.java
jsnobol3/Main.java
jsnobol3/Parameters.java
jsnobol3/ParseArgs.java
jsnobol3/Pos.java
jsnobol3/QuotedString.java
jsnobol3/Ref.java
jsnobol3/Snobol3.java
jsnobol3/StringBufferReader.java
jsnobol3/Util.java
jsnobol3/abstractbody.java
jsnobol3/override.java
jsnobol3/subclassdefined.java
"/>

<property name="SRC" value="${VMSRC} ${INTERPSRC}"/>

<property name="S3JAR" value="jsnobol3.jar"/>
<property name="CLASSDIR" value="classes"/>
<property name="S3MAIN" value="jsnobol3.Snobol3"/>
<property name="SRCDIR" value="src"/>
<property name="TESTCASE" value="tests"/>
<property name="EXAMPLECASE" value="examples"/>
<property name="EXAMPLEOUTPUT" value="src/examples/${EXAMPLEDIR}"/>

<!-- BUILD TASKS  -->

<target name="all" depends="jarfile"/>

<target name="jarfile" depends="classes">
    <jar destfile="${S3JAR}" basedir="${CLASSDIR}">
	<manifest>
	    <attribute name="Manifest-Version" value="1.0"/>
	    <attribute name="Main-class" value="${S3MAIN}"/>
	</manifest>
    </jar>
</target>

<target name="classes" depends="classdir">
	<javac destdir="${CLASSDIR}" srcdir="src/main" includes="${SRC}"/>
</target>

<target name="classdir"><mkdir dir="${CLASSDIR}" /></target>

<target name="clean" depends="cleantests,cleanexamples">
    <delete includeemptydirs="true" failonerror="false">
        <fileset file="${S3JAR}"/>
	<fileset dir="${CLASSDIR}"/>
    </delete>
</target>

<target name="cleantests">
    <delete includeemptydirs="true" failonerror="false">
	<fileset dir="${SRCDIR}/tests/outputs"/>
    </delete>
</target>
<target name="cleanexamples">
    <delete includeemptydirs="true" failonerror="false">
	<fileset dir="${SRCDIR}/examples/outputs"/>
    </delete>
</target>

<macrodef name="s3exec">
    <attribute name="input"/>
    <attribute name="output"/>
    <sequential>
    <java fork="true" classpath="${S3JAR}" classname="${S3MAIN}" output="@{output}" append="true">
          <arg value="@{input}"/></java>	
    </sequential>
</macrodef>

<macrodef name="s3diff">
    <attribute name="file"/>
    <attribute name="case"/>
    <sequential>
    <s3exec input="${SRCDIR}/@{case}/@{file}.s3"
            output="${SRCDIR}/@{case}/outputs/@{file}.txt"/>
    <condition property="match" value="true">
        <filesmatch file1="${SRCDIR}/@{case}/baseline/@{file}.txt"
                    file2="${SRCDIR}/@{case}/outputs/@{file}.txt"
                    textfile="true"/>
    </condition>
    <echo if:set="match">*** PASS: @{file}</echo>
    <echo unless:set="match">*** FAIL: @{file}</echo>
    </sequential>
</macrodef>

<!-- s3report tests output from each file -->
<macrodef name="s3report">
    <attribute name="file"/>
    <attribute name="case"/>
    <sequential>
    <mkdir dir="${SRCDIR}/@{case}/outputs"/>
    <s3diff file="@{file}" case="@{case}"/>
    </sequential>
</macrodef>

<property name="TESTS" value="
tests/test1.s3
tests/test2.s3
tests/test3.s3
tests/test4.s3
tests/test5.s3
tests/test6.s3
tests/test7.s3
tests/test8.s3
tests/test9.s3
tests/test10.s3
"/>

<!-- Wish ANT supported some kind of iteration -->
<target name="tests" depends="jarfile,cleantests">
    <s3report file="test1" case="tests"/>
    <s3report file="test2" case="tests"/>
    <s3report file="test3" case="tests"/>
    <s3report file="test4" case="tests"/>
    <s3report file="test5" case="tests"/>
    <s3report file="test6" case="tests"/>
    <s3report file="test7" case="tests"/>
    <s3report file="test8" case="tests"/>
    <s3report file="test9" case="tests"/>
    <s3report file="test10" case="tests"/>
</target>

<property name="EXAMPLES" value="
examples/abs.s3
examples/fact.s3 
examples/gdb.s3
examples/rfact.s3
"/>

<target name="examples" depends="jarfile,cleanexamples">
   <s3report file="abs" case="examples"/>
   <s3report file="fact" case="examples"/>
   <s3report file="gdb" case="examples"/>
   <s3report file="rfact" case="examples"/>
</target>

</project>
